---
import shorts from "../data/videos.json";


interface Video {
  title: string;
  description: string;
  src: string;
  id: string;
  type: string;
  thumbnail: string;
  uploadDate: string;
}

function getVideoId(src: string) {
  const idMatch = src.match(/embed\/([a-zA-Z0-9_-]+)/);
  return idMatch ? idMatch[1] : "";
}
---
<section
  id="shorts"
  class="min-h-screen w-full flex flex-col items-center justify-center px-4"
>
  <h2 class="text-4xl font-cinzel text-center text-[#928952] mb-10">
    Shorts mÃ¡gicos
  </h2>

  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 w-full max-w-6xl">
    {
      shorts.map((video: Video) => {
      
        const videoId = getVideoId(video.src);
        return (
          <div
            class="video-card relative group w-full max-w-[360px] aspect-[9/16] overflow-hidden rounded-xl shadow-lg cursor-pointer"
            data-src={video.src}
            data-title={video.title}
            
          >
            <img
              src={video.thumbnail}
              alt={video.title}
              class="w-full h-full object-cover transition-opacity duration-300"
              loading="lazy"
            />
            <div class="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition overlay">
              <svg
                class="w-12 h-12 text-white"
                fill="currentColor"
                viewBox="0 0 24 24"
              >
                <path d="M8 5v14l11-7z" />
              </svg>
            </div>

            <!-- ðŸ‘‡ JSON-LD por video -->
            <script type="application/ld+json">
              {
                JSON.stringify({
                  "@context": "https://schema.org",
                  "@type": "VideoObject",
                  "name": video.title,
                  "description": video.description,
                  "thumbnailUrl": video.thumbnail,
                  "uploadDate": video.uploadDate,
                  "contentUrl": `https://www.youtube.com/watch?v=${videoId}`,
                  "embedUrl": `https://www.youtube.com/embed/${videoId}`
                })
              }
            </script>
          </div>
        );
      })
    }
  </div>
    <!-- ðŸ‘‡ Modal para reproducir el video -->
    <dialog id="video-modal" class="h-screen w-screen bg-transparent" >
      <div class="backdrop:bg-black/80 rounded-xl p-0 z-50  flex justify-center">
        <div class="relative w-[90vw] max-w-[480px] aspect-[9/16]">
          <button
            class="absolute top-6 right-10 bg-red-900 text-white rounded-full p-3 z-10 close-btn"
          >âœ•</button>
          <img src="img/youtube-harry-modal.jpg" alt="Harry espera emocionado el video" id="harry-modal">
          <iframe
            id="modal-iframe"
            class="w-full h-full rounded-xl"
            src=""
            allow="autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
          ></iframe>
          
        </div>
      </div>      
    </dialog>
</section>


<script is:client-load>
  function initializeModal() {
    const modal = document.getElementById('video-modal');
    const iframe = document.getElementById('modal-iframe');
    const imgModal = document.getElementById('harry-modal');

    document.querySelectorAll('.video-card').forEach((card) => {
      card.addEventListener('click', () => {
        const src = card.getAttribute('data-src');
        iframe.src = `${src}?autoplay=1&controls=0`;
        modal?.showModal();
        setTimeout(() => {
          imgModal.classList.add('hidden');
        }, 500);
        iframe.classList.remove('animate-fadeOutScale');
        iframe.classList.add('animate-fadeInScale');
      });
    });

    document.querySelector('.close-btn')?.addEventListener('click', () => {
      iframe.classList.remove('animate-fadeInScale');
  iframe.classList.add('animate-fadeOutScale');
  setTimeout(() => {
      modal.close();
      setTimeout(() => {
          imgModal.classList.remove('hidden');
        }, 500);
      iframe.src = "";},200)
    });

    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        modal.close();
        setTimeout(() => {
          imgModal.classList.remove('hidden');
        }, 500);
        iframe.src = "";
      }
    });

    modal?.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        modal.close();
        setTimeout(() => {
          imgModal.classList.remove('hidden');
        }, 500);
        iframe.src = "";
      }
    });
  }

  // Ejecutar al cargar la pÃ¡gina
  initializeModal();

  // Re-ejecutar despuÃ©s de cada transiciÃ³n de vista
  document.addEventListener('astro:after-swap', () => {
    initializeModal();
  });
</script>
